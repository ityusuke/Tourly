{"filter":false,"title":"ability.rb","tooltip":"/new_app2/app/models/ability.rb","undoManager":{"mark":13,"position":13,"stack":[[{"start":{"row":6,"column":3},"end":{"row":31,"column":74},"action":"remove","lines":[" # Define abilities for the passed in user here. For example:","    #","    #   user ||= User.new # guest user (not logged in)","    #   if user.admin?","    #     can :manage, :all","    #   else","    #     can :read, :all","    #   end","    #","    # The first argument to `can` is the action you are giving the user","    # permission to do.","    # If you pass :manage it will apply to every action. Other common actions","    # here are :read, :create, :update and :destroy.","    #","    # The second argument is the resource the user can perform the action on.","    # If you pass :all it will apply to every resource. Otherwise pass a Ruby","    # class of the resource.","    #","    # The third argument is an optional hash of conditions to further filter the","    # objects.","    # For example, here the user can only update published articles.","    #","    #   can :update, Article, :published => true","    #","    # See the wiki for details:","    # https://github.com/CanCanCommunity/cancancan/wiki/Defining-Abilities"],"id":2},{"start":{"row":6,"column":3},"end":{"row":10,"column":5},"action":"insert","lines":["   if user && user.admin_flg?","      can :access, :rails_admin","      can :manage, :all","    end","  end"]}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":2},"action":"remove","lines":["  "],"id":3}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":2},"action":"remove","lines":["  "],"id":4}],[{"start":{"row":6,"column":2},"end":{"row":6,"column":4},"action":"insert","lines":["  "],"id":5}],[{"start":{"row":5,"column":2},"end":{"row":5,"column":4},"action":"insert","lines":["  "],"id":6}],[{"start":{"row":5,"column":4},"end":{"row":5,"column":6},"action":"insert","lines":["  "],"id":7}],[{"start":{"row":5,"column":4},"end":{"row":5,"column":6},"action":"remove","lines":["  "],"id":8}],[{"start":{"row":5,"column":2},"end":{"row":5,"column":4},"action":"remove","lines":["  "],"id":9}],[{"start":{"row":6,"column":2},"end":{"row":6,"column":4},"action":"remove","lines":["  "],"id":10}],[{"start":{"row":6,"column":2},"end":{"row":6,"column":4},"action":"insert","lines":["  "],"id":11}],[{"start":{"row":12,"column":3},"end":{"row":13,"column":0},"action":"remove","lines":["",""],"id":12}],[{"start":{"row":2,"column":0},"end":{"row":12,"column":3},"action":"remove","lines":["class Ability","  include CanCan::Ability","","  def initialize(user)","    if user && user.admin_flg?","      can :access, :rails_admin","      can :manage, :all","    end","  end","  end","end"],"id":13},{"start":{"row":2,"column":0},"end":{"row":11,"column":3},"action":"insert","lines":["class Ability","  include CanCan::Ability","","  def initialize(user)","    if user && user.admin_flg?","      can :access, :rails_admin","      can :manage, :all","    end","  end","end"]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":29},"action":"remove","lines":["# frozen_string_literal: true"],"id":14}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""],"id":15}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1564127313922,"hash":"29015943b0d288c5c5a39ac6b2cbbc7793b01310"}